// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.960
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// PlexRedirectPageData contains the auth URL to redirect to
type PlexRedirectPageData struct {
	AuthURL string
}

// PlexRedirectPage renders an intermediate page that redirects to Plex
func PlexRedirectPage(data PlexRedirectPageData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html><head><title>Redirecting to Plex...</title><style>\n\t\t\t\tbody {\n\t\t\t\t\tfont-family: Arial, sans-serif;\n\t\t\t\t\tmax-width: 600px;\n\t\t\t\t\tmargin: 50px auto;\n\t\t\t\t\tpadding: 20px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tbackground-color: #1a1a1a;\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t}\n\t\t\t\th1 { color: #e5a00d; }\n\t\t\t\t.spinner {\n\t\t\t\t\tborder: 3px solid #282828;\n\t\t\t\t\tborder-top: 3px solid #e5a00d;\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\twidth: 40px;\n\t\t\t\t\theight: 40px;\n\t\t\t\t\tanimation: spin 1s linear infinite;\n\t\t\t\t\tmargin: 20px auto;\n\t\t\t\t}\n\t\t\t\t@keyframes spin {\n\t\t\t\t\t0% { transform: rotate(0deg); }\n\t\t\t\t\t100% { transform: rotate(360deg); }\n\t\t\t\t}\n\t\t\t</style></head><body><div class=\"spinner\"></div><h1>Redirecting to Plex...</h1><p>Please wait while we redirect you to Plex for authentication.</p><script>\n\t\t\t\t// Immediate redirect to Plex\n\t\t\t\twindow.location.href = '{ data.AuthURL }';\n\t\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
